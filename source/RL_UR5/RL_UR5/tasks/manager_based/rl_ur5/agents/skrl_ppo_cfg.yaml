seed: 42

# Model configuration with CNN for camera data
models:
  separate: False
  policy:
    class: GaussianMixin
    clip_actions: True
    clip_log_std: True
    min_log_std: -20.0
    max_log_std: 2.0
    initial_log_std: 0.0
    network:
      # CNN feature extractor for images
      - name: features_extractor
        input: STATES  # PyTorch NHWC -> NCHW. Warning: don't permute for JAX since it expects NHWC
        layers:
          # CNN layers for image processing
          - conv2d: {out_channels: 32, kernel_size: 8, stride: 4, padding: 0}
          - conv2d: {out_channels: 64, kernel_size: 4, stride: 2, padding: 0}
          - conv2d: {out_channels: 64, kernel_size: 3, stride: 1, padding: 0}
          # Flatten to 1D
          - flatten
          # FC layers for processing features
          - linear: 512
          - linear: 256
        activations: relu
      # Policy network
      - name: net
        input: features_extractor
        layers: [256, 128]
        activations: relu
    output: ACTIONS
  
  value:
    class: DeterministicMixin
    clip_actions: False
    network:
      # CNN feature extractor for images (same as policy)
      - name: features_extractor
        input: STATES  # PyTorch NHWC -> NCHW. Warning: don't permute for JAX since it expects NHWC
        layers:
          # CNN layers for image processing
          - conv2d: {out_channels: 32, kernel_size: 8, stride: 4, padding: 0}
          - conv2d: {out_channels: 64, kernel_size: 4, stride: 2, padding: 0}
          - conv2d: {out_channels: 64, kernel_size: 3, stride: 1, padding: 0}
          # Flatten to 1D
          - flatten
          # FC layers for processing features
          - linear: 512
          - linear: 256
        activations: relu
      # Value network
      - name: net
        input: features_extractor
        layers: [256, 128]
        activations: relu
    output: ONE

# Rollout memory
memory:
  class: RandomMemory
  memory_size: -1

# PPO agent configuration
agent:
  class: PPO
  rollouts: 36
  learning_epochs: 5
  mini_batches: 4
  discount_factor: 0.99
  lambda: 0.95
  learning_rate: 5.0e-04
  learning_rate_scheduler: KLAdaptiveLR
  learning_rate_scheduler_kwargs:
    kl_threshold: 0.008
  state_preprocessor: RunningStandardScaler
  state_preprocessor_kwargs: null
  value_preprocessor: RunningStandardScaler
  value_preprocessor_kwargs: null
  random_timesteps: 0
  learning_starts: 0
  grad_norm_clip: 1.0
  ratio_clip: 0.2
  value_clip: 0.2
  clip_predicted_values: True
  entropy_loss_scale: 0.01
  value_loss_scale: 1.0
  kl_threshold: 0.0
  rewards_shaper_scale: 0.1
  time_limit_bootstrap: False
  experiment:
    directory: "ur5_pick_place"
    experiment_name: ""
    write_interval: auto
    checkpoint_interval: auto

# Sequential trainer
trainer:
  class: SequentialTrainer
  timesteps: 36000
  headless: True
  enable_tensorboard: True
  environment_info: log